<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B103CB54-DA22-38D4-A5AD-6254BA42BA22}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>Journal_content_qmltyperegistration</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\C++_Project\Journal\cmake-build-release\CMakeFiles\21946188c3639aa3cc2eb6ed3724a4d8\journal_content_qmltyperegistrations.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Automatic QML type registration for target Journal_content</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
call ..\.qt\bin\qt_setup_tool_path.bat C:/Qt/6.6.1/msvc2019_64/./bin/qmltyperegistrar.exe --generate-qmltypes=D:/C++_Project/Journal/cmake-build-release/Content/Journal_content.qmltypes --import-name=Content --major-version=1 --minor-version=0 @D:/C++_Project/Journal/cmake-build-release/Content/qmltypes/Journal_content_foreign_types.txt -o D:/C++_Project/Journal/cmake-build-release/Content/journal_content_qmltyperegistrations.cpp D:/C++_Project/Journal/cmake-build-release/Content/meta_types/qt6journal_content_metatypes.json
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/C++_Project/Journal/cmake-build-release/Content/.generated
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch D:/C++_Project/Journal/cmake-build-release/Content/.generated/Journal_content.qmltypes
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\C++_Project\Journal\cmake-build-release\Content\qmltypes\Journal_content_foreign_types.txt;D:\C++_Project\Journal\cmake-build-release\Content\meta_types\qt6journal_content_metatypes.json;C:\Qt\6.6.1\msvc2019_64\.\bin\qmltyperegistrar.exe;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6qml_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6core_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6network_metatypes.json;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Automatic QML type registration for target Journal_content</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
call ..\.qt\bin\qt_setup_tool_path.bat C:/Qt/6.6.1/msvc2019_64/./bin/qmltyperegistrar.exe --generate-qmltypes=D:/C++_Project/Journal/cmake-build-release/Content/Journal_content.qmltypes --import-name=Content --major-version=1 --minor-version=0 @D:/C++_Project/Journal/cmake-build-release/Content/qmltypes/Journal_content_foreign_types.txt -o D:/C++_Project/Journal/cmake-build-release/Content/journal_content_qmltyperegistrations.cpp D:/C++_Project/Journal/cmake-build-release/Content/meta_types/qt6journal_content_metatypes.json
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/C++_Project/Journal/cmake-build-release/Content/.generated
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch D:/C++_Project/Journal/cmake-build-release/Content/.generated/Journal_content.qmltypes
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\C++_Project\Journal\cmake-build-release\Content\qmltypes\Journal_content_foreign_types.txt;D:\C++_Project\Journal\cmake-build-release\Content\meta_types\qt6journal_content_metatypes.json;C:\Qt\6.6.1\msvc2019_64\.\bin\qmltyperegistrar.exe;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6qml_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6core_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6network_metatypes.json;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Automatic QML type registration for target Journal_content</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
call ..\.qt\bin\qt_setup_tool_path.bat C:/Qt/6.6.1/msvc2019_64/./bin/qmltyperegistrar.exe --generate-qmltypes=D:/C++_Project/Journal/cmake-build-release/Content/Journal_content.qmltypes --import-name=Content --major-version=1 --minor-version=0 @D:/C++_Project/Journal/cmake-build-release/Content/qmltypes/Journal_content_foreign_types.txt -o D:/C++_Project/Journal/cmake-build-release/Content/journal_content_qmltyperegistrations.cpp D:/C++_Project/Journal/cmake-build-release/Content/meta_types/qt6journal_content_metatypes.json
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/C++_Project/Journal/cmake-build-release/Content/.generated
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch D:/C++_Project/Journal/cmake-build-release/Content/.generated/Journal_content.qmltypes
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\C++_Project\Journal\cmake-build-release\Content\qmltypes\Journal_content_foreign_types.txt;D:\C++_Project\Journal\cmake-build-release\Content\meta_types\qt6journal_content_metatypes.json;C:\Qt\6.6.1\msvc2019_64\.\bin\qmltyperegistrar.exe;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6qml_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6core_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6network_metatypes.json;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Automatic QML type registration for target Journal_content</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
call ..\.qt\bin\qt_setup_tool_path.bat C:/Qt/6.6.1/msvc2019_64/./bin/qmltyperegistrar.exe --generate-qmltypes=D:/C++_Project/Journal/cmake-build-release/Content/Journal_content.qmltypes --import-name=Content --major-version=1 --minor-version=0 @D:/C++_Project/Journal/cmake-build-release/Content/qmltypes/Journal_content_foreign_types.txt -o D:/C++_Project/Journal/cmake-build-release/Content/journal_content_qmltyperegistrations.cpp D:/C++_Project/Journal/cmake-build-release/Content/meta_types/qt6journal_content_metatypes.json
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory D:/C++_Project/Journal/cmake-build-release/Content/.generated
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch D:/C++_Project/Journal/cmake-build-release/Content/.generated/Journal_content.qmltypes
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\C++_Project\Journal\cmake-build-release\Content\qmltypes\Journal_content_foreign_types.txt;D:\C++_Project\Journal\cmake-build-release\Content\meta_types\qt6journal_content_metatypes.json;C:\Qt\6.6.1\msvc2019_64\.\bin\qmltyperegistrar.exe;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6qml_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6core_metatypes.json;C:\Qt\6.6.1\msvc2019_64\metatypes\qt6network_metatypes.json;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\C++_Project\Journal\cmake-build-release\CMakeFiles\e4b28c691976283838f16ad0f109c0a6\Journal_content_qmltyperegistration.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\Journal_content_qmltyperegistration</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\Journal_content_qmltyperegistration</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\Journal_content_qmltyperegistration</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\C++_Project\Journal\cmake-build-release\Content\journal_content_qmltyperegistrations.cpp;D:\C++_Project\Journal\cmake-build-release\Content\Journal_content.qmltypes;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\Journal_content_qmltyperegistration</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\C++_Project\Journal\Content\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/C++_Project/Journal/Content/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/C++_Project/Journal -BD:/C++_Project/Journal/cmake-build-release --check-stamp-file D:/C++_Project/Journal/cmake-build-release/Content/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Core\Qt6CoreConfigureFileTemplate.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlModuleDirMappingTemplate.qrc.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlPluginTemplate.cpp.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6qmldirTemplate.cmake.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/C++_Project/Journal/Content/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/C++_Project/Journal -BD:/C++_Project/Journal/cmake-build-release --check-stamp-file D:/C++_Project/Journal/cmake-build-release/Content/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Core\Qt6CoreConfigureFileTemplate.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlModuleDirMappingTemplate.qrc.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlPluginTemplate.cpp.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6qmldirTemplate.cmake.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/C++_Project/Journal/Content/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/C++_Project/Journal -BD:/C++_Project/Journal/cmake-build-release --check-stamp-file D:/C++_Project/Journal/cmake-build-release/Content/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Core\Qt6CoreConfigureFileTemplate.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlModuleDirMappingTemplate.qrc.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlPluginTemplate.cpp.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6qmldirTemplate.cmake.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/C++_Project/Journal/Content/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/C++_Project/Journal -BD:/C++_Project/Journal/cmake-build-release --check-stamp-file D:/C++_Project/Journal/cmake-build-release/Content/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Core\Qt6CoreConfigureFileTemplate.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlModuleDirMappingTemplate.qrc.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6QmlPluginTemplate.cpp.in;C:\Qt\6.6.1\msvc2019_64\lib\cmake\Qt6Qml\Qt6qmldirTemplate.cmake.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="D:\C++_Project\Journal\cmake-build-release\Content\CMakeFiles\Journal_content_qmltyperegistration">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\C++_Project\Journal\cmake-build-release\ZERO_CHECK.vcxproj">
      <Project>{5BE8F421-A075-3D16-B76A-E0F2F2B67308}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>